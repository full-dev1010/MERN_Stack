{"version":3,"sources":["app/launchpad/components/WarningComponent.js","app/launchpad/tokenAPI/utils/validatorMultisender.js","assets/new_images/images/logo4.png","app/launchpad/components/ApprovalInfo.js","app/launchpad/components/ApprovalTable.js","app/launchpad/MultisenderERC20.js"],"names":["styles","fadeIn","animation","animationName","Radium","keyframes","WarningCompolent","warningText","className","style","WAValidator","require","rx_live","validateAddress","address","tokenSymbol","validate","validateTransaction","length","validateAmount","amount","test","validateInvestorsList","content","investorsArray","split","count","i","item","trim","arr","undefined","module","exports","ApprovalInfo","approvalCount","totalTokenAmount","ownerTokenBalance","ownerMainCoinBalance","tokenName","mainCoinName","ApprovalTable","recipientsList","scanUrl","isValid","txAddress","txScanUrl","isCheckTx","useState","totalPages","pageNumber","setPageNumber","showRecipients","slice","map","index","href","target","role","onClick","class","Form","Group","type","name","id","value","sum","calculateTotalTokenAmount","defaultChecked","String","substring","substr","convertTxAddress","setNetworkType","networkActions","MultisenderERC20","walletAddress","setWallet","setStatus","tokenAddress","setTokenAddress","tokenBalance","presaleRate","investorsInfo","setInvestorsInfo","addressList","setAddressList","amountList","setAmountList","isApproval","setIsApproval","isWarning","setIsWarning","setTotalTokenAmount","setApprovalCount","mounted","setMounted","dispatch","useDispatch","networkType","useSelector","state","Network","changeAddressList","changeType","orgArray","tokenAmount","resAddressList","resAmountList","info","push","parseFloat","addWalletListener","window","ethereum","on","accounts","useEffect","chainId","getNetworkChainId","networkIndex","getNetworkListIndex","updateNetwork","console","log","bsCustomFileInput","init","a","getCurrentWalletConnected","status","asyncFetchTokenData","submitForm","e","preventDefault","createTokenInfo","expanded","setExpanded","handleChange","panel","event","newExpanded","src","alt","Accordion","disableGutters","onChange","AccordionSummary","aria-controls","AccordionDetails","htmlFor","Control","placeholder","authOptions","method","url","data","crossDomain","dataType","axios","then","response","catch","error","getTokenInfoAction","width","height","setOptions","fontSize","lineHeight","val","nextValidation1","handleFiles","files","reader","FileReader","onload","orgContent","result","readAsText","fileTypes","WarningComponent","toStep","backAction","multisendToken","convertArrayEther","ether","toString","approveTokenAccount","nextValidation2","onSubmit"],"mappings":"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","file":"static/js/19.2134ca1f.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { bounce, fadeIn } from 'react-animations';\nimport Radium, {StyleRoot} from 'radium';\n\nconst styles = {\n    fadeIn: {\n      animation: 'x 1s',\n      animationName: Radium.keyframes(fadeIn, 'fadeIn')\n    }\n  }\n\nconst WarningCompolent = ({warningText}) => {\n    return (\n        <StyleRoot>\n            <div className=\"div-warning\" style={styles.fadeIn}>\n                {warningText}\n            </div>\n        </StyleRoot>\n    )\n}\n\nexport default WarningCompolent;\n","var WAValidator = require('wallet-address-validator');\nconst rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n\nexport const validateAddress = (address, tokenSymbol) => {\n    return WAValidator.validate(address, tokenSymbol);\n}\n\nexport const validateTransaction = (address) => {\n    return address.length == 66;\n}\n\nexport const validateAmount = amount => {\n    return rx_live.test(amount);\n}\n\nexport const validateInvestorsList = content => {\n    const investorsArray = content.split(/\\r\\n|\\n|\\r/);\n    let count = 0;\n    for(let i = 0; i < investorsArray.length; i++){\n        const item = investorsArray[i].trim();\n        if( item == '' ) continue;\n        const arr = item.split(',');\n        if( arr == undefined || arr.length < 2 ) return false;\n        const address = arr[0].trim();\n        const amount = arr[1].trim();\n        if( address == '' || amount == ''\n            || !validateAddress(address, 'ETH') || !validateAmount(amount) ) return false;\n        count++;\n    }\n    return count < 2 ? false : true;\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/logo4.ebde744a.png\";","import React, { Component } from 'react'\n\nconst ApprovalInfo = ({approvalCount, totalTokenAmount, ownerTokenBalance, ownerMainCoinBalance, tokenName, mainCoinName}) => {\n    return (\n        <div className=\"div-approval-info row\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"view-value\">{approvalCount}</div>\n                    <div className=\"description\">Your current multisender approval</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className=\"view-value\">{totalTokenAmount} &nbsp; {tokenName}</div>\n                    <div className=\"description\">Total number of tokens to send</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className=\"view-value\">{ownerTokenBalance} &nbsp; {tokenName}</div>\n                    <div className=\"description\">Your token balance</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className=\"view-value\">{ownerMainCoinBalance}</div>\n                    <div className=\"description\">Your {mainCoinName} balance</div>\n                </div>\n            </div>\n            <div className=\"div-approval-description\">The full estimate will be shown on the next page</div>\n        </div>\n\n    )\n}\n\nexport default ApprovalInfo;\n","import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\n\n\nconst ApprovalTable = ({recipientsList, scanUrl, isValid, txAddress, txScanUrl, isCheckTx}) => {\n    const [currentRecipients, setCurrentRecipients] = useState([]);\n    const [totalPages, setTotalPages] = useState((recipientsList.length + 5)/ 6);\n    const [pageNumber, setPageNumber] = useState(1)\n    const handleNextpage = () => {\n        if(pageNumber < totalPages){\n            setPageNumber(pageNumber + 1)\n        }\n    }\n    const handlePrevpage = () => {\n        if(pageNumber > 1){\n            setPageNumber(pageNumber - 1)\n        }\n    }\n\n    const calculateTotalTokenAmount = () => {\n        let sum = 0;\n        for (let i = 0; i < recipientsList.length; i++){\n            sum += recipientsList[i].amount;\n        }\n        return sum;\n    }\n\n    const showRecipients = recipientsList.slice((pageNumber-1) * 6, pageNumber * 6);\n\n    const convertTxAddress = (txAddress) => {\n        txAddress = '0x3d1c07f7d2f6f0b32ddb696cef99d08c8c7ebd801b688efb636de6ed34c5b98c'\n        return String(txAddress).substring(0, 20) +\n                \"...\" +\n            String(txAddress).substr(48);\n    }\n\n    return (\n        <div className=\"div-approval-table row\">\n            <div className=\"table-title\">List of recipients</div>\n            <table>\n                <thead>\n                    <th>Address</th>\n                    <th>Amount</th>\n                </thead>\n                <tbody>\n                {showRecipients && showRecipients.map((item, index) => (\n                    <tr>\n                        <td><a href={scanUrl + item.address} target=\"_blank\" role=\"button\">{item.address}</a></td>\n                        <td>{item.amount}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <div className=\"div-pagination\">\n                <button className=\"btn-handler\" onClick={handleNextpage}>\n                    <i class=\"mdi mdi-chevron-right mdi-24px\"></i>\n                </button>\n                <button className=\"btn-handler\" onClick={handlePrevpage}>\n                    <i class=\"mdi mdi-chevron-left mdi-24px\"></i>\n                </button>\n                <span>{(pageNumber-1) * 6 + 1} - \n                { pageNumber * 6 > recipientsList.length ? recipientsList.length : pageNumber * 6}\n                 / \n                {recipientsList.length}</span>\n\n            </div>\n            <div className=\"div-approval-amount\">\n                <div className=\"div-approval-amount-title\">\n                    { isValid ? 'Approve transaction hash' :\n                        'Amount to approve'\n                    }\n                </div>\n                <div className=\"div-approval-amount-select\">\n                    { !isValid && \n                        <Form.Group>\n                            <div className=\"form-check\">\n                            <label className=\"form-check-label\">\n                                <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"\"/>\n                                <i className=\"input-helper\"></i>Exact amount to be sent ({calculateTotalTokenAmount()})\n                            </label>\n                            </div>\n                            <div className=\"form-check\">\n                            <label className=\"form-check-label\">\n                                <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\" defaultChecked/>\n                                <i className=\"input-helper\"></i>\n                                Unlimited amount\n                            </label>\n                            </div>\n                        </Form.Group>\n                    }\n                    { isValid && \n                        <div className=\"div-transaction-confirmed\">\n                            <a href={txScanUrl + txAddress} target=\"_blank\" className=\"tx-address\">{convertTxAddress(txAddress)}</a>\n                            <span className=\"tx-status menu-icon\">\n                                <i className={\"mdi mdi-\" + (isCheckTx ? \"check\" : \"close\")}></i>\n                            </span>\n\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ApprovalTable;\n","import React, { Component } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport ReactFileReader from \"react-file-reader\";\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport moment from 'moment';\n\n// import logo from '../../assets/new_images/images/logo4.png'\n\nimport AceEditor from 'react-ace';\n\nimport ApprovalInfo from './components/ApprovalInfo';\nimport ApprovalTable from './components/ApprovalTable';\nimport WarningComponent from './components/WarningComponent';\n\nimport { useEffect, useState } from \"react\";\nimport networkActions from './redux/network/actions';\n\nimport { \n  ether,\n  convertArrayEther\n} from './tokenAPI/utils/ethers';\n\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  createTokenInfo,\n  updateTokenName,\n  multisendToken,\n  approveTokenAccount,\n  getNetworkInfoByChainId,\n  getNetworkChainId,\n  getNetworkListIndex,\n} from \"./tokenAPI/utils/interact.js\";\n\nimport{ \n  validateAddress,\n  validateAmount,\n  validateInvestorsList\n} from './tokenAPI/utils/validatorMultisender.js';\n\nimport { fromEther} from './tokenAPI/utils/ethers';\nimport Accordion from '@material-ui/core/Accordion';  \nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport axios from \"axios\";\n\nvar recipientsList = [];\nconst { setNetworkType } = networkActions;\n\n\n\nconst MultisenderERC20 = () => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n\n  // 0xff90962f83810f1d4fbf4ba970a6b443b41267a5\n\n  const [tokenAvailable, setTokenAvailable] = useState(false);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenBalance, setTokenBalance] = useState('');\n  const [tokenSymbol, setTokenSymbol] = useState('');\n  const [presaleRate, setPresaleRate] = useState('');\n  const [investorsInfo, setInvestorsInfo] = useState('')\n  const [addressList, setAddressList] = useState([])\n  const [amountList, setAmountList] = useState([])\n\n  const [isApproval, setIsApproval] = useState(false)\n  const [isWarning, setIsWarning] = useState(false)\n  const [totalTokenAmount, setTotalTokenAmount] = useState(0)\n  const [ownerTokenBalance, setOwnerTokenBalance] = useState(0)\n  const [ownerMainCoinBalance, setOwnerMainCoinBalance] = useState(0)\n  const [mainCoinName, setMainCoinName] = useState('BNB')\n  const [approvalCount, setApprovalCount] = useState(0)\n\n  const [mounted, setMounted] = useState(false)\n\n\n    const onChangeAddressList = value => {\n      changeAddressList(value, 'key');\n    }\n\n    const dispatch = useDispatch();\n    const updateNetwork = (networkIndex) => {\n        dispatch(setNetworkType(networkIndex));\n    }\n\n    const {\n        networkType\n    } = useSelector((state) => state.Network);\n\n    const changeAddressList = (value, changeType) => {\n      if( changeType != 'file' ) setInvestorsInfo(value);\n      const orgArray = value.split(/\\r\\n|\\n|\\r/);\n      let tokenAmount = 0;\n      let content = '';\n      let resAddressList = [];\n      let resAmountList = [];\n      recipientsList = [];\n      for(let i = 0; i < orgArray.length; i++){\n        if(orgArray[i].trim() == '') continue;\n        const info = orgArray[i].split(',');\n        if( info == undefined || info.length < 2 ){\n          setIsWarning(true);\n          continue;\n        }\n        const address = info[0].trim();\n        const amount = info[1].trim();\n        if( !validateAddress(address, 'ETH') || !validateAmount(amount) ){\n          setIsWarning(true);\n          continue;\n        }\n        if( resAddressList.length > 0 ){\n          content += '\\n';\n        }\n        content += address + ',' + amount;\n        resAddressList.push(address);\n        resAmountList.push(parseFloat(amount));  \n        recipientsList.push(\n          {\n            address: address,\n            amount: parseFloat(amount)\n          }\n        );\n        tokenAmount += parseFloat(amount);\n      }\n      setAddressList(resAddressList);\n      setAmountList(resAmountList);\n      setApprovalCount(recipientsList.length);\n      setTotalTokenAmount(tokenAmount);    \n      if( changeType == 'file' ) setInvestorsInfo(value);\n    }\n\n    const getTokenInfoAction = (e) => {\n      setTokenAddress(e.target.value);\n      var authOptions = {\n        method: 'POST',\n        url: '/api/v1/getToken',\n        data: {\n          \"contractaddress\": e.target.value.trim(),\n          // \"contractaddress\": \"0xff90962f83810f1d4fbf4ba970a6b443b41267a5\",\n          \"apikey\" : \"ifxygq7umocwcw4cc0gok04sskwskow4w040c04gs8g4448og0wogowko0w8csog\"\n        },\n        crossDomain: true,\n        dataType: 'json'\n      };\n\n      axios(authOptions)\n      .then((response) => {\n          console.log(response.data)\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n    }\n\n    //called only once\n    useEffect(() => {\n      const chainId = getNetworkChainId();\n      const networkIndex = getNetworkListIndex(chainId);\n      updateNetwork(networkIndex);\n      console.log(\"network Index is \", networkIndex);\n\n      bsCustomFileInput.init()\n      // const message = await loadCurrentMessage();\n      // setMessage(message);\n      // addSmartContractListener();\n  \n      setMounted(true)\n\n      const asyncFetchTokenData = async () => {\n\n        const { address, status } = await getCurrentWalletConnected();\n    \n        setWallet(address);\n        setStatus(status);\n    \n        addWalletListener();\n        \n        // console.log(\"CGI wallet\", address);\n        // console.log(\"CGI status\", status);\n\n      }\n      asyncFetchTokenData();\n    }, []);\n  \n    function addWalletListener() {\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", (accounts) => {\n          if (accounts.length > 0) {\n            setWallet(accounts[0]);\n            setStatus(\"👆🏽 Write a message in the text-field above.\");\n          } else {\n            setWallet(\"\");\n            setStatus(\"🦊 Connect to Metamask using the top right button.\");\n          }\n        });\n      } else {\n        setStatus(\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        );\n      }\n    }\n    \n    const finalValidation = () => {\n      // if( minBuyValue > maxBuyValue ){\n      //   alert(\"The minimum contribution limit cannot be higher than max limit. For equal amounts put the same number Ex. 0.5,0.5\");\n      //   return false;\n      // }\n\n      return true;\n    }\n\n    const submitForm = async (e) => {\n      e.preventDefault();\n\n      if( finalValidation() != true ){\n        return;\n      }\n\n      const { status } = await createTokenInfo(\n        walletAddress, \n        tokenAddress,\n        tokenSymbol,\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        presaleRate,\n      );\n\n      setStatus(status);\n      // setTimeout(() => {\n      //   const { status } = setTokenAdditionalInformationLast(\n      //     walletAddress, \n      //     provideParticipants          \n      //   );\n      //   setStatus(status);\n      //   console.log(\"CGI setTokenAdditionalInformation\");\n      // }, 10000);\n    };\n\n    const onClickSubmit = async () => {\n\n      // const accounts = await web3.eth.getAccounts();\n      // setMessage('Waiting on transaction success...');\n      setStatus(status);\n      setMessage('You have been entered!');\n    };\n\n    const connectWalletPressed = async () => {\n      const walletResponse = await connectWallet();\n      setStatus(walletResponse.status);\n      setWallet(walletResponse.address);\n    };\n  \n    //the UI of our component\n    const [expanded, setExpanded] = useState('panel1');\n\n    const handleChange = (panel) => (event, newExpanded) => {\n      if( isWarning ) return;\n      setExpanded(newExpanded ? panel : false);\n    };\n  \n    const nextValidation1 = (e) => {\n      e.preventDefault();\n      if( !validateInvestorsList(investorsInfo) ){\n        setIsWarning(true);\n        return;\n      }\n\n      setIsWarning(false);\n      setExpanded('panel2');\n    };\n\n    const nextValidation2 = (e) => {\n      e.preventDefault();\n      if(totalTokenAmount < ownerTokenBalance){\n        setIsWarning(true);\n        return;\n      }\n      // console.log(\"CGI addressList\", addressList);\n      // console.log(\"CGI amountList\", amountList);\n      // console.log(\"CGI amountList\", convertArrayEther(amountList));\n      if( !isApproval ){\n        const success = approveTokenAccount(networkType, tokenAddress, ether(totalTokenAmount).toString());\n        if( success ) setIsApproval(true);\n      }\n      else{\n        multisendToken(networkType, walletAddress, tokenAddress, addressList, convertArrayEther(amountList), ether(totalTokenAmount).toString(), '0xc778417e063141139fce010982780140aa0cd5ab', 0.01);\n        setIsApproval(false);\n        setIsWarning(false);\n        // setExpanded('panel3');\n      }\n\n      // setIsWarning(false);\n      // setExpanded('panel3');\n    };\n\n    const nextValidation3 = (e) => {\n      e.preventDefault();\n      if( finalValidation() != true ){\n        return;\n      }\n      setExpanded('panel9');\n    };\n\n    const backAction = (e, toStep) => {\n      e.preventDefault();\n      setExpanded('panel' + toStep)\n    }\n\n    const uploadHandler = (e) => {\n      e.preventDefault();\n\n    }\n\n    const handleFiles = files => {\n      var reader = new FileReader();\n      reader.onload = function(e) {\n          // Use reader.result\n        const orgContent = reader.result;\n        changeAddressList(orgContent, 'file');\n      }\n      reader.readAsText(files[0]);\n    } \n\n    if (!mounted) return null;\n\n    return (\n      <div className=\"launchpad-create-manage-presale\">\n        {/* <div className=\"page-header\">\n        </div> */}\n        <div className=\"row row-header\">\n          <div className=\"col-12 grid-margin stretch-card\">\n            <div className=\"card create-sale-card\">\n              <div className=\"card-body\">\n                <div>\n                  <img src={require('../../assets/new_images/images/logo4.png')} alt=\"logo\" />                  \n                  {/* <img src={require('../../assets/images/new_images/images/spiral-notepad.png')} alt=\"logo\" /> */}\n                  <a>Multisender ERC20</a>\n                </div>\n                <p>\n                  A tool that allows you to batch send ERC20 tokens\n                </p>\n                <p className=\"para-warning\">\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row token-address-container\">\n          <div className=\"grid-margin stretch-card col-step-card\">\n            <div className=\"card step-card\">\n              <div className=\"card-body\">\n                <Accordion disableGutters expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                  <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n                    <div className=\"card-title\">\n                      <span className=\"step-badge\">1</span>\n                      <span className=\"title-content\">Prepare</span>\n                    </div>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <form className=\"forms-sample\">\n                      <Form.Group>\n                        <label htmlFor=\"inputTokenAddress\">Token Address</label>\n                        { tokenBalance > 0 && \n                          <span className=\"text-balance\">Balance: {tokenBalance}</span>\n                        }\n                        <Form.Control type=\"text\" id=\"inputTokenAddress\" placeholder=\"0x\"\n                          name=\"tokenAddress\"\n                          value={tokenAddress} \n                          onChange={ (e) => getTokenInfoAction(e) } />\n                          {/* // onChange={(e) => setTokenAddress(e.target.value)} /> */}\n                        <label className=\"lable-table\" htmlFor=\"inputRecipients\">Please provide list of recipients\n                          <span className=\"btn-show-example-csv\">Show Example CSV</span>\n                        </label>\n                        <div className=\"div-ace-editor\">\n                          <AceEditor\n                            placeholder={`0xA3361322364CC901d73050D5Dee388f962B9f897,1000\\n0x38d8EaC80539223e2b3c3040347a0DbBbF7E86Ab,10.2`}\n                            width=\"100%\"\n                            height=\"300px\"\n                            setOptions={{ \n                              fontSize: \"18px\",\n                              lineHeight: \"28px\"\n                            }}\n                            value={investorsInfo}\n                            onChange={val => onChangeAddressList(val)}\n                          />\n                        </div>\n                      </Form.Group>\n\n                      <button className=\"btn btn-next mr-2\"\n                        onClick={(e) => nextValidation1(e)}\n                      >Next</button>\n                      <ReactFileReader handleFiles={handleFiles} fileTypes={'.csv'} \n                        className=\"btn btn-danger btn-icon-text btn-upload\"\n                        onClick={uploadHandler}                      \n                      >\n                        <i className=\"mdi mdi-upload btn-icon-prepend\"></i>                                                    \n                        Upload CSV File                    \n                      </ReactFileReader>\n                      {\n                        isWarning && \n                        // <div className=\"div-warning\">Invaild information!</div>\n                        <WarningComponent \n                          warningText={'Invalid information!'}\n                        />\n                      }\n                    </form>\n                    </AccordionDetails>\n                </Accordion>\n                <Accordion disableGutters expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                  <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n                    <div className=\"card-title\">\n                      <span className=\"step-badge\">2</span>\n                      <span className=\"title-content\">Approve</span>\n                    </div>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <form className=\"forms-sample\">\n                      <ApprovalInfo \n                        approvalCount={approvalCount}\n                        totalTokenAmount={totalTokenAmount}\n                        ownerTokenBalance={ownerTokenBalance}\n                        ownerMainCoinBalance={ownerMainCoinBalance}\n                        tokenName={tokenSymbol}\n                        mainCoinName={mainCoinName}\n                        />\n                      <ApprovalTable \n                        recipientsList={recipientsList}\n                        scanUrl={\"https://bscscan.com/address/\"}\n                        isValid={isApproval}\n                      />\n                      <button className=\"btn btn-dark btn-back\"\n                        onClick={(e) => backAction(e, 1)}\n                      >Back</button>\n                      <button className=\"btn btn-next mr-2 btn-approve\"\n                        onClick={(e) => nextValidation2(e)}\n                      >{isApproval ? 'Proceed' : 'Approve'}</button>\n                      {\n                        isWarning && \n                        <WarningComponent \n                          warningText={'Invalid information!'}\n                        />\n                      }\n                    </form>\n                  </AccordionDetails>\n                </Accordion>\n                  <Accordion disableGutters expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n                      <div className=\"card-title\">\n                        <span className=\"step-badge\">3</span>\n                        <span className=\"title-content\">Multisend</span>\n                      </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <form className=\"forms-sample row no-margin-top col-step-finalize-card\"\n                        onSubmit={submitForm}\n                      >\n                        Success!\n                      </form>\n                    </AccordionDetails>\n                  </Accordion>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    );\n  };\n  \nexport default MultisenderERC20;\n\n"],"sourceRoot":""}