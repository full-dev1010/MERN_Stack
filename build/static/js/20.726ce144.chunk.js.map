{"version":3,"sources":["assets/new_images/images/crown.png","app/launchpad/Vip.js","app/http/http.js"],"names":["module","exports","Vip","useState","walletAddress","setWallet","setStatus","mainCoinName","React","mounted","setMounted","typeTier","setTypeTier","fee","handleChangeCheckbox","e","target","value","console","log","networkType","useSelector","state","Network","addWalletListener","window","ethereum","on","accounts","length","href","useEffect","bsCustomFileInput","init","a","getCurrentWalletConnected","address","status","asyncFetchTokenData","className","id","src","crown","Group","type","name","onChange","defaultChecked","onClick","buyVip","parseInt","axios","create","baseURL","headers"],"mappings":"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","file":"static/js/20.726ce144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crown.c68f6ed5.png\";","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport moment from 'moment';\n\nimport crown from '../../assets/new_images/images/crown.png'\n\nimport AceEditor from 'react-ace';\n\nimport { useEffect, useState } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  createTokenInfo,\n  updateTokenName,\n  buyVip,\n} from \"./tokenAPI/utils/interact.js\";\n\nimport { fromEther} from './tokenAPI/utils/ethers';\nimport http from \"../http/http.js\";\nimport axios from \"axios\";\n\nconst Vip = () => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n\n  const [tokenAvailable, setTokenAvailable] = useState(false);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenName, setTokenName] = useState('');\n  const [tokenSymbol, setTokenSymbol] = useState('');\n  const [tokenDecimal, setTokenDecimal] = useState();\n  const [tokenTotalSupply, setTokenTotalSupply] = useState(1000000000);\n  const [mainCoinName, setMainCoinName] = useState(\"BNB\");\n\n  const [mounted, setMounted] = React.useState(false)\n\n  const [typeTier, setTypeTier] = useState(\"3\");\n  const fee = [0.02, 0.1, 0.25, 1];\n  \n  const handleChangeCheckbox = (e) => {\n    // let isChecked = e.target.checked;\n    setTypeTier(e.target.value)\n    console.log(\"CGI\", typeTier);\n  }\n  const {\n      networkType\n  } = useSelector((state) => state.Network);\n\n  const handleClickBuyVip = () => {\n    buyVip(networkType, walletAddress, typeTier, fee[parseInt(typeTier)]);\n  }\n\n    const getTokenInfoAction = (e) => {\n      setTokenAddress(e.target.value);\n      var authOptions = {\n        method: 'POST',\n        url: '/api/v1/getToken',\n        data: {\n          \"contractaddress\": e.target.value.trim(),\n          // \"contractaddress\": \"0xff90962f83810f1d4fbf4ba970a6b443b41267a5\",\n          \"apikey\" : \"ifxygq7umocwcw4cc0gok04sskwskow4w040c04gs8g4448og0wogowko0w8csog\"\n        },\n        crossDomain: true,\n        dataType: 'json'\n      };\n\n      axios(authOptions)\n      .then((response) => {\n          console.log(response.data)\n          setTokenName(response.data.name);\n          setTokenSymbol(response.data.symbol);\n          setTokenDecimal(response.data.decimals);\n          setTokenAvailable(response.data.ok);\n          setTokenTotalSupply(response.data.supply)\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n    }\n\n    //called only once\n    useEffect(() => {\n      bsCustomFileInput.init()\n      setMounted(true)\n\n      const asyncFetchTokenData = async () => {\n\n        const { address, status } = await getCurrentWalletConnected();\n    \n        setWallet(address);\n        setStatus(status);\n    \n        addWalletListener();\n        \n      }\n      asyncFetchTokenData();\n    });\n    \n    function addWalletListener() {\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", (accounts) => {\n          if (accounts.length > 0) {\n            setWallet(accounts[0]);\n            setStatus(\"üëÜüèΩ Write a message in the text-field above.\");\n          } else {\n            setWallet(\"\");\n            setStatus(\"ü¶ä Connect to Metamask using the top right button.\");\n          }\n        });\n      } else {\n        setStatus(\n          <p>\n            {\" \"}\n            ü¶ä{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        );\n      }\n    }\n    \n    const submitForm = async (e) => {\n      e.preventDefault();\n\n      const { status } = await createTokenInfo(\n      );\n\n      setStatus(status);\n    };\n\n    const onClickSubmit = async () => {\n\n      const { status } = await updateTokenName(walletAddress, tokenName);\n      setStatus(status);\n      setMessage('You have been entered!');\n    };\n\n    const connectWalletPressed = async () => {\n      const walletResponse = await connectWallet();\n      setStatus(walletResponse.status);\n      setWallet(walletResponse.address);\n    };\n  \n    const [expanded, setExpanded] = useState('panel1');\n\n    const handleChange = (panel) => (event, newExpanded) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n  \n    const nextValidation1 = (e) => {\n      e.preventDefault();\n      if( tokenAvailable != true ){\n        alert(\"Your Token address # is an invalid Address!\");\n        return;\n      }\n      setExpanded('panel2');\n    };\n\n    const nextValidation8 = (e) => {\n      e.preventDefault();\n      setExpanded('panel9');\n    };\n\n    const editAction = (e) => {\n      e.preventDefault();\n      setExpanded('panel1');\n    }\n\n    const backAction = (e, toStep) => {\n      e.preventDefault();\n      setExpanded('panel' + toStep)\n    }\n\n\n    if (!mounted) return null;\n\n\n    return (\n      <div className=\"div-vip\">\n        <div className=\"row-header\">\n          <div className=\"grid-margin stretch-card\">\n            <img id=\"img-tax-free\" src={crown}></img>\n          </div>\n          <div className=\"div-vip-description\">\n            <p>VIP gives you discounted access to Multisender.app and all of your tx will be free.</p>\n            <p>Keep in mind, you would still need to pay for {mainCoinName} network fees.</p>\n            <p>If you need additional information, feel free to ask in our Telegram channel. <a href=\"https://t.me/MultiSender\" target=\"_blank\">t.me/MultiSender</a></p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"grid-margin stretch-card col-step-card\">\n            <Form.Group>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"0\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>1 day\n                        <span className=\"text-fee-value\">{fee[0]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"1\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                        7 days\n                        <span className=\"text-fee-value\">{fee[1]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios3\" value=\"2\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                        1 month\n                        <span className=\"text-fee-value\">{fee[2]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios4\" value=\"3\" defaultChecked onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                          no limit\n                        <span className=\"text-fee-value\">{fee[3]} {mainCoinName}</span>\n                    </label>\n                </div>\n            </Form.Group>\n          </div>\n          <button type=\"button\" className=\"btn btn-icon-text btn-buy\"\n            onClick={handleClickBuyVip}>\n            Buy\n          </button>\n\n        </div>\n\n      </div>\n\n    );\n  };\n  \nexport default Vip;\n\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://eu.bsc.chaingateway.io/v1',\n    headers: {\n        \"Accept\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        'Access-Control-Allow-Credentials': true,\n        \"Access-Control-Allow-Methods\" : \"GET,POST,PUT,DELETE,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n        'Authorization':'ifxygq7umocwcw4cc0gok04sskwskow4w040c04gs8g4448og0wogowko0w8csog'\n    }\n});\n\n\n// export default axios.create({\n//   baseURL: process.env.NEXT_PUBLIC_API_URL+\"/api\",\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//     'Authorization':'ifxygq7umocwcw4cc0gok04sskwskow4w040c04gs8g4448og0wogowko0w8csog'\n//   }\n// });"],"sourceRoot":""}